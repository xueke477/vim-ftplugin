call plug#begin('~/.local/share/nvim/plugged')

Plug 'davidhalter/jedi-vim'

Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }

Plug 'zchee/deoplete-jedi'

Plug 'svermeulen/vim-macrobatics'

Plug 'vim-latex/vim-latex'

Plug 'JamshedVesuna/vim-markdown-preview'

Plug 'drewtempelmeyer/palenight.vim'

Plug 'vim-airline/vim-airline'

Plug 'vim-airline/vim-airline-themes'

Plug 'python-mode/python-mode'

call plug#end()
"----------------------------------------------------------------------------
" palenight colortheme setting
set background=dark
colorscheme palenight
"let g:lightline = { 'colorscheme': 'palenight' }
let g:airline_theme = "palenight"
if (has("nvim"))
  "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif

"For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
"Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
" < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
if (has("termguicolors"))
  set termguicolors
endif
"----------------------------------------------------------------------------
"Vim backup file setting
"put al three types of backup files in one directory ~/.vimdata
let &directory = expand('~/.vimdata/swap//')

set backup
let &backupdir = expand('~/.vimdata/backup//')

set undofile
let &undodir = expand('~/.vimdata/undo//')

if !isdirectory(&undodir) | call mkdir(&undodir, "p") | endif
if !isdirectory(&backupdir) | call mkdir(&backupdir, "p") | endif
if !isdirectory(&directory) | call mkdir(&directory, "p") | endif
"----------------------------------------------------------------------------
"vim-markdown-preview setting for grip
let vim_markdown_preview_github=1
"----------------------------------------------------------------------------
"vim-macrobatics setting
"the macors are saved at ~/.config/macrobatics
"the normal mode macros for recording and playing macro
nmap <nowait> <leader>rm <plug>(Mac_RecordNew)
nmap <nowait> <leader>pm <plug>(Mac_Play)
"the normal mode macro for naming the macro just recorded
nmap <leader>nm <plug>(Mac_NameCurrentMacro)
"----------------------------------------------------------------------------
"vim-latex setting
"
"EQUIRED. This makes vim invoke Latex-Suite when you open a tex file.
filetype plugin on

" IMPORTANT: win32 users will need to have 'shellslash' set so that latex can
" be called correctly.
set shellslash

" IMPORTANT: grep will sometimes skip displaying the file name if you search
" in a singe file. This will confuse Latex-Suite. Set your grep program to
" always generate a file-name.
set grepprg=grep\ -nH\ $*

" OPTIONAL: This enables automatic indentation as you type.
filetype indent on

" OPTIONAL: Starting with Vim 7, the filetype of empty .tex files defaults to
" 'plaintex' instead of 'tex', which results in vim-latex not being loaded.
" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'

"set background color
"colo darkblue

"set font size
"set guifont=Menlo\ Regular:h14

"set auto line-break, i.e. don't break line in the middle of a word.
set lbr

"show row and column number at the bottom right corner
set ruler

"set number
set number

"set modeline
set modeline
set modelines=1

"set default target format
let g:Tex_DefaultTargetFormat = 'pdf'

"this is to make bib works well
let g:Tex_MultipleCompileFormats='pdf, bib, pdf'

"set default compiler
let g:Tex_CompileRule_pdf='pdflatex -src-specials -interaction=nonstopmode $*'

"set default viewer 
let g:Tex_ViewRule_pdf = 'preview'
"-------------------------------------------------------------------------------
"Python setting for nvim
let g:python3_host_prog = '/Users/xueke/opt/anaconda3/bin/python'
let g:loaded_python_provider = 0
"-------------------------------------------------------------------------------
"deoplete setting
let g:deoplete#enable_at_startup = 1
"----------------------------------------------------------------------------
"Jedi settings
"make jedi-vim use tabs when going to a definition etc
"let g:jedi#use_tabs_not_buffers = 1
let g:jedi#completions_command = "<S-Space>"
"stop the docstring window from poping-up during completion
autocmd FileType python setlocal completeopt-=preview
"doc preview
let g:jedi#documentation_command = "K"
"set the place where the preview window appears
set splitbelow
"-------------------------------------------------------------------------------
"Use Jefi-vim for autocompletion and documentation preview
"Use Pymode for whitespace, indentation, colorcolumn, virtualenv, linting and
"syntax highlighting; pymode_doc is turned off
"Pymode Rope project function is completely turned off, including completion
"-------------------------------------------------------------------------------
"Pymode settings
let g:pymode = 1
let g:pymode_warnings = 1
let g:pymode_trim_whitespaces = 1
let g:pymode_options = 1
let g:pymode_options_max_line_length = 79
let g:pymode_options_colorcolumn = 1
let g:pymode_quickfix_minheight = 3
let g:pymode_quickfix_maxheight = 6
let g:pymode_preview_height = &previewheight
let g:pymode_preview_position = 'botright'
let g:pymode_python = 'python3'
let g:pymode_indent = 1
let g:pymode_folding = 0
let g:pymode_motion = 1
let g:pymode_doc = 0
"the following is simply to disable doc_bind in Pymode
"let g:pymode_doc_bind = '<leader>KK'
let g:pymode_virtualenv = 1
"let g:pymode_virtualenv_path = '/Users/xueke/opt/anaconda3/envs/python-project'
let g:pymode_virtualenv_path = '/Users/xueke/opt/anaconda3'
let g:pymode_run = 0
"let g:pymode_run_bind = '<leader>r'
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_bind = '<leader>b'
"let g:pymode_breakpoint_cmd = ''

"The following settings are from 3. Code checking.
let g:pymode_lint = 1
let g:pymode_lint_on_write = 1
"let g:pymode_lint_unmodified = 0
"let g:pymode_lint_on_fly = 0
let g:pymode_lint_message = 1
"The following selects code checkers.
"Values may be chosen from: `pylint`, `pep8`, `mccabe`, `pep257`, `pyflakes`.
let g:pymode_lint_checkers = ['pyflakes', 'pep8', 'mccabe']
"let g:pymode_lint_ignore = ['C0114', 'C0116']
let g:pymode_lint_cwindow = 1
let g:pymode_lint_signs = 1
let g:pymode_lint_todo_symbol = 'WW'
let g:pymode_lint_comment_symbol = 'CC'
let g:pymode_lint_visual_symbol = 'RR'
let g:pymode_lint_error_symbol = 'EE'
let g:pymode_lint_info_symbol = 'II'
let g:pymode_lint_pyflakes_symbol = 'FF'

"Part of Section 4. Rope support are skipped for now.
let g:pymode_rope = 0
"let g:pymode_rope_lookup_project = 0
"let g:pymode_rope_project_root = ""
"let g:pymode_rope_show_doc_bind = '<C-c>d'
"let g:pymode_rope_regenerate_on_write = 1

"The following is from Section 4.1 Completion
"set completeopt=menuone,noinsert
let g:pymode_rope_completion = 0
"let g:pymode_rope_complete_on_dot = 1
"let g:pymode_rope_completion_bind = '<C-Space>'
"let g:pymode_rope_completion_bind = '<S-Space>'
"let g:pymode_rope_autoimport = 0
"let g:pymode_rope_autoimport_modules = ['os', 'shutil', 'datetime']
"let g:pymode_rope_autoimport_import_after_complete = 0

"The following is from Section 5 Syntax
let g:pymode_syntax = 1
let g:pymode_syntax_slow_sync = 0
let g:pymode_syntax_all = 1
let g:pymode_syntax_print_as_function = 0
let g:pymode_syntax_highlight_async_await = g:pymode_syntax_all
let g:pymode_syntax_highlight_equal_operator = g:pymode_syntax_all
let g:pymode_syntax_highlight_stars_operator = g:pymode_syntax_all
let g:pymode_syntax_highlight_self = g:pymode_syntax_all
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all
let g:pymode_syntax_string_formatting = g:pymode_syntax_all
let g:pymode_syntax_string_format = g:pymode_syntax_all
let g:pymode_syntax_string_templates = g:pymode_syntax_all
let g:pymode_syntax_doctests = g:pymode_syntax_all
let g:pymode_syntax_builtin_objs = g:pymode_syntax_all
let g:pymode_syntax_builtin_types = g:pymode_syntax_all
let g:pymode_syntax_highlight_exceptions = g:pymode_syntax_all
let g:pymode_syntax_docstrings = g:pymode_syntax_all
"-------------------------------------------------------------------------------
